<h1>About</h1>
<p>倉儲: <a href="https://github.com/mdecycu/wcm2025">https://github.com/mdecycu/wcm2025</a></p>
<p>網頁: <a href="https://mde.tw/wcm2025">https://mde.tw/wcm2025</a></p>
<p>Discussions: <a href="https://github.com/mdecycu/wcm2025/discussions">https://github.com/mdecycu/wcm2025/discussions</a></p>
<p>課程目標:</p>
<p style="padding-left: 30px;">讓學員了解網際內容管理系統架構與應用</p>
<p>教學要點:</p>
<p style="padding-left: 30px;">Python 程式設計、網際內容管理系統開發與應用</p>
<p>授課內容:</p>
<p style="padding-left: 30px;">網際內容管理概要</p>
<p style="padding-left: 30px;">探討 <a href="https://github.com/mdecycu/reeborg">Reeborg</a> 程式系統</p>
<p style="padding-left: 30px;">探討 <a href="https://github.com/mdecycu/cmsimde">cmsimde</a> 架構</p>
<p style="padding-left: 30px;">分組專案</p>
<p style="padding-left: 30px;">分組報告</p>
<p>可攜程式系統:</p>
<p style="padding-left: 30px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>87b7bbx</span></p>
<p><span>學員作業網站樣板: <a href="https://mde.tw/wcm2025_hw">https://mde.tw/wcm2025_hw</a> </span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">1. 作業 (40%): 從 Github Classroom 取得的個人倉儲與網站, 每週必須至少提交 2 次與課程進度有關的內容.</p>
<p style="padding-left: 60px;">作業一 (20%): 採用 <a href="https://nginx.org/">nginx</a> 建立全球資訊網伺服器</p>
<p style="padding-left: 90px;">在 Windows 操作系統中建立一台 WWW 伺服器</p>
<p style="padding-left: 90px;">在 Ubuntu 操作系統建立一台 WWW 伺服器</p>
<p style="padding-left: 90px;">在 虛擬主機上建立一台 WWW 伺服器 (Windows and Ubuntu)</p>
<p style="padding-left: 120px;">Virtualbox</p>
<p style="padding-left: 120px;">Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p style="padding-left: 120px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p style="padding-left: 120px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<p style="padding-left: 60px;">作業二 (20%): 在各種不同環境下的操作系統中配置 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span></p>
<p style="padding-left: 30px;">2. 期中協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 60px;">專案題目: 利用 Copilot 解析 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span></p>
<p style="padding-left: 30px;">3. 期末協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 60px;"><span>專案題目: 網際內容管理架構下的 <a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)<br/></span></p>
<p style="padding-left: 90px;">利用 uwsgi 配置分組學員執行 cmsimde 動態內容管理系統編輯</p>
<p style="padding-left: 90px;">設法將 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span> 與 cmsimde 網際內容管理系統整合</p>
<hr/>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei"> 全頁檢視 </a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Summary</h2>
<p><object data="/images/wcm2025.svg" height="1523" type="image/svg+xml" width="1488"></object></p>
<p><a href="https://mdecycu.github.io/mind-map/#/?fileURL=https://mde.tw/wcm2025/downloads/wcm2025.smm">Edit wcm2025.smm</a></p><h2>WCMS</h2>
<p>Intro to WCMS:</p>
<p><a href="https://en.wikipedia.org/wiki/Web_content_management_system">Web content management system</a></p>
<p><a href="https://www.techtarget.com/searchcontentmanagement/definition/web-content-management-WCM">WCM</a></p>
<p><a href="https://www.ilo.org/sites/default/files/wcmsp5/groups/public/@dgreports/@dcomm/@webdev/documents/instructionalmaterial/wcms_767815.pdf">wcms.pdf</a></p>
<h2>WebApp</h2>
<p>網際應用程式 - <a href="https://en.wikipedia.org/wiki/Web_application">Web Application</a></p>
<p style="padding-left: 30px;">A web application (or web app) is application software that is created with web technologies and runs via a web browser. Web applications emerged during the late 1990s and allowed for the server to dynamically build a response to the request, in contrast to static web pages.</p>
<p>Build Full-Stack Web Apps Using Only Python</p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Solution_stack#Full-stack_developer">https://en.wikipedia.org/wiki/Solution_stack#Full-stack_developer</a> </p>
<p><a href="https://com-pute.com/brython_tutorial/">https://com-pute.com/brython_tutorial/</a> </p>
<p style="padding-left: 30px;">Create production web applications using a browser-based version of Python<br/>called 'Brython', as well as the Python Flask and SQLAlchemy libraries.</p>
<p style="padding-left: 30px;"><a href="https://pythonanvil.com/">https://pythonanvil.com/</a> </p>
<p style="padding-left: 30px;"><a href="https://streamlitpython.com/">https://streamlitpython.com/</a> </p>
<p style="padding-left: 30px;"><a href="https://learnsqlpage.com/">https://learnsqlpage.com/</a> </p>
<h2>Vmware</h2>
<p>Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<h2>AI</h2>
<p>如何因應 AI 時代的挑戰：</p>
<p>培養難以被AI取代的核心能力：</p>
<ol>
<li><span style="background-color: #ffff99;">創意思考與問題解決能力</span></li>
<li>跨領域整合的思維</li>
<li>同理心與情感智商</li>
<li>團隊合作與領導才能</li>
<li>批判性思考與決策能力</li>
</ol>
<p>選擇未來導向的專業領域：</p>
<ol>
<li>AI 與機器學習相關技術</li>
<li>數據分析與應用</li>
<li>人機互動設計</li>
<li><span style="background-color: #ffff99;">數位內容創作</span></li>
<li>永續發展與環保科技</li>
<li>心理諮商與生命教育</li>
<li>創意產業與體驗設計</li>
</ol>
<p>建立終身學習習慣：</p>
<ol>
<li><span style="background-color: #ffff99;">持續關注產業發展趨勢</span></li>
<li>善用線上學習平台</li>
<li><span style="background-color: #ffff99;">培養自主學習能力</span></li>
<li>建立知識更新機制</li>
<li>參與專業社群交流</li>
</ol>
<p>發展多元技能組合：</p>
<ol>
<li>不要侷限在單一專業</li>
<li>培養第二專長</li>
<li><span style="background-color: #ffff99;">跨領域知識整合</span></li>
<li>軟實力與硬實力並重</li>
<li>培養數位工具運用能力</li>
</ol>
<p>保持開放與彈性思維：</p>
<ol>
<li>擁抱新技術與改變</li>
<li>適應力與抗壓性</li>
<li><span style="background-color: #ffff99;">勇於嘗試新事物</span></li>
<li>正向面對挑戰</li>
<li>培養創業家精神</li>
</ol>
<hr/>
<p></p>
<h1>Topics</h1>
<p>HTML, CSS and Javascript</p>
<p><a href="https://dev.to/martyhimmel/series/156">ECMAScript 5 教學</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-1787-0">2015 Javascript Object Programming</a> (<a href="http://229.cycu.org/2015_JavaScript_Object_Programming.pdf">local download</a>)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-6494-1">2015 JavaScript Quick Syntax Reference</a> (<a href="http://229.cycu.org/2015_javascript_quick_syntax_reference.pdf">local download</a>)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-6392-0">2015 Pro Javascript Techniques</a> (<a href="http://229.cycu.org/2015_pro_javascript_techniques.pdf">local download</a>)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2235-5">2016 Beyond JQuery</a> (<a href="http://229.cycu.org/2016_beyond_jquery.pdf">local download</a>)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-9250-1">2023 The Absolute Beginner's Guide to HTML and CSS</a> (<a href="http://229.cycu.org/2023_beginner_goude_css_html.pdf">local download</a>)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-9783-4">2023 Creating Responsive Websites Using HTML5 and CSS3</a> (<a href="http://229.cycu.org/2023_Creating_Responsive_Websites_HTML5_CSS3.pdf">local download</a>)</p><h2>Portable</h2>
<p>以下將說明如何自行在 Windows 操作系統中建立可攜 Python 程式系統.</p>
<p><a href="/downloads/gen_portable_python_and_get_pip.7z">gen_portable_python_and_get_pip.7z</a></p>
<p>目前最新的 Python 版本為 3.13.2, 可以利用舊版的 Python310 (為了配合 Siemens NX2312), 以下列程式碼建立一套基本的 Python313 可攜程式套件:</p>
<ol>
<li>利用舊版的 Python310 可攜套件執行 <a href="/downloads/gen_3.13.2_portable.py">gen_3.13.2_portable.py</a>, 就可以建立最基本的 Python 3.13.2 系統目錄, 在此命名為 Python313.</li>
<li>接著將此 Python313 目錄放入舊可攜 Python 程式系統的 Y:\ 之後, 以此目錄名稱取代舊有 start.bat 檔案中的 Python 目錄名稱, 建立一個新的 start_python313.bat, 然後用此批次檔案啟動可攜系統.</li>
<li>啟動基本的 Python 3.13.2 可攜套件後, 在命令列中以 python get-pip.py 安裝 pip 工具.</li>
<li>為了能夠執行 cmsimde 動態網站, 在命令列執行 pip install flask flask_cors bs4 lxml pelican markdown, 安裝啟動 cmsimde 所需的 Python 模組.</li>
<li>至此所得到的 Python313 目錄容量約為 170MB, 壓縮為 <a href="/downloads/Python313.7z.001">Python313.7z.001</a>, <a href="/downloads/Python313.7z.002">Python313.7z.002</a>, <a href="/downloads/Python313.7z.003">Python313.7z.003</a> 與 <a href="/downloads/Python313.7z.004">Python313.7z.004</a> 等四個檔案.</li>
</ol>
<p>在此有一點必須特別注意, SciTE 中有關使用 Pythonw.exe 解譯程式設定的檔案必須使用:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">if PLAT_WIN
	python.command=pythonw.exe
if PLAT_GTK
	python.command=python3
if PLAT_MAC
	python.command=python</pre>
<p>也就是使用當下所設定的 pythonw.exe 而非指定到特定舊版本的 pythonw.exe, 例如: Y:\Python310\pythonw.exe</p><h3>Javascript</h3>
<p><a href="https://dev.to/martyhimmel/javascript-es5---getting-started-5980">教材一</a></p>
<p>在任何一個網頁, 利用滑鼠右鍵帶出小視窗, 然後選擇"檢測", 再點選"主控台", 輸入"alert("Hello, Javascript") 後按下 Enter, 就會跳出一個小視窗列出 "Hello, Javascript". 這個意思是, 網頁瀏覽器中就自帶有 Javascript 的解譯器.</p>
<p>接下來, 假如你已經建立好了隨身碟中的可攜程式環境: <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a>, 同時也取得 wcm2025 課程所配置的學員作業倉儲, 你就可以直接在編輯動態網頁的同時, 開啟該頁面的 Source Code (也就是該頁面的 HTML 超文件內容), 並將下列 Javascript 程式放入超文件中, 存檔後點選編輯區下方的"viewpage"按鈕, 就可以從"主控台"看到程式執行結果:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;script&gt;
console.log("顯示在主控台 - 紀錄區的內容")
&lt;/script&gt;</pre>
<p>假如編輯網頁中的 HTML 原始碼再加入下列程式段, 就可以在網頁中利用 &lt;script type="text/python"&gt;&lt;/script&gt;, 以 Python 語法建立程式, 而這種程式是經由採 Javascript 編寫的 <a href="https://brython.info/">Brython</a> 解譯器轉為 Javascript 後, 直接在網頁中執行:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;script type="text/python"&gt;
print("從 Brython 執行後看到的結果")
&lt;/script&gt;</pre>
<p>從上面這個範例, 可以看出較長的 Javascript 程式, 並不是直接寫在網頁上, 而是儲存在 WWW 伺服器中的特定位置後, 然後在網頁中導入執行, 例如這個範例中的 brython.js.</p>
<p>另外, 由於 cmsimde 網際內容管理系統程式設計的問題, 動態網頁與靜態網頁引用 Javascript 程式路徑的方式不同, 初學者必須特別注意. 下列程式就是利用 Brython 編寫的網頁版貪食蛇遊戲, 利用滑鼠按下"啟動"就可以執行, 按下"暫停"程式就會暫時停止執行.</p>
<div id="brython_div2"></div>
<script>
console.log("顯示在主控台 - 紀錄區的內容")
</script>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<script type="text/python">
print("從 Brython 執行後看到的結果")
</script>
</p>
<script src="https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py" type="text/python">
</script><h2>VM</h2>
<p>Virtual Machine and WWW servers:</p>
<p>1. 作業 (40%): 從 Github Classroom 取得的個人倉儲與網站, 每週必須至少提交 2 次與課程進度有關的內容.</p>
<p style="padding-left: 30px;">作業一 (20%): 採用 <a href="https://nginx.org/">nginx</a> 建立全球資訊網伺服器</p>
<p style="padding-left: 60px;">在 Windows 操作系統中建立一台 WWW 伺服器</p>
<p style="padding-left: 60px;">在 Ubuntu 操作系統建立一台 WWW 伺服器</p>
<p style="padding-left: 60px;">在 虛擬主機上建立一台 WWW 伺服器 (Windows and Ubuntu)</p>
<p style="padding-left: 90px;">Virtualbox</p>
<p style="padding-left: 90px;">Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p style="padding-left: 90px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p style="padding-left: 90px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<p style="padding-left: 30px;">作業二 (20%): 在各種不同環境下的操作系統中配置 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span></p><h2>Copilot</h2>
<p>2. 期中協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p>專案題目: 利用 Copilot 解析 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span></p><h2>cmsimde</h2>
<p>3. 期末協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p><span>專案題目: 網際內容管理架構下的 <a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)<br/></span></p>
<p style="padding-left: 30px;">利用 uwsgi 配置分組學員執行 cmsimde 動態內容管理系統編輯</p>
<p style="padding-left: 30px;">設法將 <span><a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</span> 與 cmsimde 網際內容管理系統整合</p><h1>Reeborg</h1>
<h4>建立開發用的 Reeborg 倉儲:</h4>
<p>因為 <a href="https://github.com/aroberge/reeborg">https://github.com/aroberge/reeborg</a> 原始碼的使用授權允許延伸應用, 因此進行如下處理:</p>
<ol>
<li>在 Github 建立一個空的倉儲, 名稱設為 reeborg.</li>
<li>git clone --recurse-submodules <a href="https://github.com/aroberge/reeborg.git">https://github.com/aroberge/reeborg.git</a> rb, 表示暫時將可能帶有子模組 (其實並沒有) 的倉儲取下, 放入 rb 目錄中.</li>
<li>cd rb 後, 執行 git remote add rb <a href="mailto:git@your_putty_session:your_github_account/reeborg.git">git@your_putty_session:your_github_account/reeborg.git</a></li>
<li>然後利用 git push rb, 將帶有所有提交歷程記錄的倉儲送到原本為空的 reeborg.</li>
<li>此一 Reeborg 原始碼的倉儲就位於 <a href="https://github.com/mdecycu/reeborg">https://github.com/mdecycu/reeborg</a></li>
<li>取下新建立的 reeborg 開發倉儲後, 將 reeborg.js 放入 rb 目錄, 並取原先的 reeborg_offline.html 作為 index.html, 放入 acp 與 acp.bat 後將內建 branch 改為 main, 提交變更後再設定 Github Pages, 完成 <a href="https://mde.tw/reeborg">https://mde.tw/reeborg</a> 的開發設定.</li>
<li>除了目前多語言版本外, 也可以<a href="https://github.com/mdecycu/reeborg/tree/e5742fbbfb915cecb9c078bc45f44d722d6a118d">回到 2016.02.03 的穩定版本</a>.</li>
</ol>
<h4>利用 Python 內建伺服器執行 Reeborg:</h4>
<ol>
<li>啟動可攜程式環境</li>
<li>cd tmp</li>
<li>git clone <a href="https://github.com/mdecycu/reeborg.git">https://github.com/mdecycu/reeborg.git</a></li>
<li>cd reeborg</li>
<li>python -m http.server</li>
<li>然後使用瀏覽器連結至 <a href="http://localhost:8000/world.html">http://localhost:8000/world.html</a></li>
</ol>
<p>Reeborg 原始碼所使用的 Javascript 語法請參考下列參考資料:</p>
<p style="padding-left: 30px;"><a href="https://dev.to/martyhimmel/series/156">ECMAScript 5 教學</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-1787-0">2015 Javascript Object Programming</a> (<a href="http://229.cycu.org/2015_JavaScript_Object_Programming.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-6494-1">2015 JavaScript Quick Syntax Reference</a> (<a href="http://229.cycu.org/2015_javascript_quick_syntax_reference.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-6392-0">2015 Pro Javascript Techniques</a> (<a href="http://229.cycu.org/2015_pro_javascript_techniques.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-2235-5">2016 Beyond JQuery</a> (<a href="http://229.cycu.org/2016_beyond_jquery.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-9250-1">2023 The Absolute Beginner's Guide to HTML and CSS</a> (<a href="http://229.cycu.org/2023_beginner_goude_css_html.pdf">local download</a>)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-9783-4">2023 Creating Responsive Websites Using HTML5 and CSS3</a> (<a href="http://229.cycu.org/2023_Creating_Responsive_Websites_HTML5_CSS3.pdf">local download</a>)</p>
<p></p><h1>Reference</h1>
<p><a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> 利用 Template 建立多樣的靜態網站內容</p>
<p><a href="https://github.com/mdecycu/reeborg">https://github.com/mdecycu/reeborg</a> 原始碼研究, 升級其 Brython 版本以及相關 Javascript 程式庫</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/reeborg/">https://mde.tw/reeborg/</a></p>
<p>整理舊資料: <a href="https://github.com/coursemdetw">https://github.com/coursemdetw</a></p>
<p><a href="https://coursemdetw.github.io/creo2primer">https://coursemdetw.github.io/creo2primer</a> learn how to write a CAD tutorial book</p>
<h2>Old</h2>
<p>以下連結僅能在系統主幹網路的 IPv6 協定下擷取:</p>
<p style="padding-left: 30px;">有關<a href="http://wcm.cycu.org:88/github/wcm2019/content/%E4%BB%A3%E7%90%86%E4%B8%BB%E6%A9%9F%E8%A8%AD%E5%AE%9A.html">代理主機設定</a></p>
<p style="padding-left: 30px;">有關<a href="http://wcm.cycu.org:88/github/wcm2019/content/%E5%85%A8%E7%90%83%E5%8D%94%E5%90%8C.html">全球協同</a></p>
<p style="padding-left: 30px;">有關 <a href="http://wcm.cycu.org:88/github/wcm2019/content/%E5%AF%A6%E7%BF%92%E4%BB%BB%E5%8B%99%E4%B8%80.html">Blogger</a>, <a href="http://wcm.cycu.org:88/github/wcm2019/content/Blogger%20API.html">Blogger API</a>, <a href="http://wcm.cycu.org:88/github/wcm2019/content/Blogger%20API%20%E6%87%89%E7%94%A8.html">應用</a></p>
<p style="padding-left: 30px;">有關 <a href="http://wcm.cycu.org:88/github/wcm2019/content/ANSI%20C.html">ANSIＣ</a>, 有關 <a href="http://wcm.cycu.org:88/github/wcm2019/content/Lua.html">Lua</a> (CoppeliaSim 中使用 Lua 作為控制用 Script 語言)</p>
<p style="padding-left: 30px;">有關 <a href="http://wcm.cycu.org:88/github/wcm2019/content/Konva%20demo.html">Konva</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/wcm2019/content/sitemap.html">其他</a> (<a href="http://wcm.cycu.org:88/github/wcm2019/content/sitemap.html">2019</a>, <a href="http://wcm.cycu.org:88/github/wcm2020/content/sitemap.html">2020</a>, <a href="http://wcm.cycu.org:88/github/wcm2021/content/sitemap.html">2021</a>, <a href="http://wcm.cycu.org:88/github/wcm2022_guide/content/sitemap.html">2022</a>, <a href="http://wcm.cycu.org:88/github/wcm2023/content/sitemap.html">2023</a>, <a href="http://wcm.cycu.org:88/github/wcm2024/content/sitemap.html">2024</a>)</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text">.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr>
<p>
<script type="text/javascript" src="https://unpkg.com/three@0.144.0/build/three.js">
</script>
</p>