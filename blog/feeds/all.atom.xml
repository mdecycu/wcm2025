<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>WCM2025 網際內容管理</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2025-02-24T15:57:13+08:00</updated><entry><title>網際內容管理任務</title><link href="./2025_wcm_assignment1.html" rel="alternate"></link><published>2025-02-21T11:00:00+08:00</published><updated>2025-02-24T15:57:13+08:00</updated><author><name>mdecycu</name></author><id>tag:None,2025-02-21:./2025_wcm_assignment1.html</id><summary type="html">&lt;p&gt;2025 年網際內容管理的學員指定任務.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2025 年網際內容管理的學員指定任務.&lt;/p&gt;


&lt;h1&gt;任務一&lt;/h1&gt;
&lt;p&gt;執行以下任務請在作業網站中使用 H1 &lt;span style="background-color: #ffff00;"&gt;Tasks&lt;/span&gt; 標題, 然後在此第一階頁面中摘要說明各週任務的目的以及操作心得.&lt;/p&gt;
&lt;h2&gt;自行製作可攜程式系統&lt;/h2&gt;
&lt;p&gt;製作可攜程式的任務內容請放入 Tasks 頁面下, 標題為 H2 &lt;span style="background-color: #ffff00;"&gt;task1&lt;/span&gt; 的頁面中, 其中必須包括帶有說明字幕的詳細操作影片以及所完成相關檔案下載連結 (請放置在 個人 10GB 容量的 Office 365 OneDrive 系統中後, 在網頁中提供下載連結).&lt;/p&gt;
&lt;p&gt;利用 C 槽的舊可攜程式系統打造課程所使用的程式系統: 
首先在 C 槽建立 tmp 目錄, 將以下兩個檔案下載至 C:\tmp.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/cd2025/downloads/gen_portable_python_and_get_pip.7z"&gt;https://mde.tw/cd2025/downloads/gen_portable_python_and_get_pip.7z&lt;/a&gt;
&lt;a href="https://mde.tw/cd2025/downloads/start.bat"&gt;https://mde.tw/cd2025/downloads/start.bat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;利用 7zip 解開第一個壓縮檔案, 可以得到 gen_3.13.2_portable.py 與 get-pip.py 等兩個檔案. 第一個檔案執行後可以 generate Python 3.13.2 portable 基本的程式檔案. 而第二個檔案以 python.exe 執行後, 可以在基本的 Python 檔案中的 Scripts 目錄配置 pip.exe.&lt;/p&gt;
&lt;p&gt;操作步驟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;將 gen_3.13.2_portable.py 與 get-pip.py 複製到 C:\Portable_2023_fall\data 目錄中.&lt;/li&gt;
&lt;li&gt;start.bat 則複製到 C:\Portable_2023_fall 目錄中.&lt;/li&gt;
&lt;li&gt;接下來設法以舊版的 python.exe 或 pythonw.exe 執行 gen_3.13.2_portable.py.&lt;/li&gt;
&lt;li&gt;取得 Python313 基本程式目錄後, 以 Python313 取代舊版的 Python 後, 關閉舊版的可攜程式, 使用新版的 start.bat 啟動可攜程式, 查驗是否命令列中的 Python 版本為 3.13.2.&lt;/li&gt;
&lt;li&gt;確認 Python 已經為 3.13.2 之後, 在使用新版啟動的可攜程式命令列中執行 python get-pip.py 後, 利用 pip list 確認 pip 工具已經配置完成, 且目前僅有 pip 一項模組工具.&lt;/li&gt;
&lt;li&gt;接下來在新系統的命令列視窗中執行 pip install flask flask_cors bs4 lxml pelican markdown, 安裝執行動態網頁編輯所需的 Python 模組, 即完成新系統的 Python313 系統配置.&lt;/li&gt;
&lt;li&gt;接著請自行配置 home_ipv6、portablegit、PUTTY、sharex、tmp
vscode、Webots_2025a、wink3 以及 wscite 等目錄. 並自行下載 Process Explorer、Zoomit 以及 solvespace.exe 至新系統的 data 目錄中, 之後利用新系統的 start.bat 啟動可攜, 利用 stop.bat 關閉可攜系統.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;任務二&lt;/h1&gt;
&lt;h2&gt;使用 Nginx 建立全球資訊網伺服器&lt;/h2&gt;
&lt;p&gt;任務二內容請放入 Tasks 頁面下, 標題為 H2 &lt;span style="background-color: #ffff00;"&gt;task2&lt;/span&gt; 的頁面中, 其中必須包括帶有說明字幕的詳細操作影片以及所完成相關檔案下載連結 (請放置在 個人 10GB 容量的 Office 365 OneDrive 系統中後, 在網頁中提供下載連結).&lt;/p&gt;
&lt;h2&gt;HTML 中的 CSS 與 Javascript&lt;/h2&gt;
&lt;h2&gt;Windows 環境中的 WWW server&lt;/h2&gt;
&lt;h2&gt;Ubuntu 環境中的 WWW server&lt;/h2&gt;
&lt;h1&gt;任務三&lt;/h1&gt;
&lt;h2&gt;配置 Reeborg 網際系統&lt;/h2&gt;
&lt;h1&gt;任務四&lt;/h1&gt;
&lt;h2&gt;解析 Reeborg 系統架構&lt;/h2&gt;
&lt;h1&gt;任務五&lt;/h1&gt;
&lt;h2&gt;網際內容管理中的 Reeborg&lt;/h2&gt;</content><category term="wcm2025"></category><category term="task1"></category><category term="wcm2025"></category></entry><entry><title>網際內容管理</title><link href="./2025_wcm_w1.html" rel="alternate"></link><published>2025-02-18T11:00:00+08:00</published><updated>2025-02-24T11:36:10+08:00</updated><author><name>mdecycu</name></author><id>tag:None,2025-02-18:./2025_wcm_w1.html</id><summary type="html">&lt;p&gt;2025 年網際內容管理課程並不使用 SolidWorks, 但故事還是得從這個與 Windows 95 一同推出的 MCAD 套件說起......&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2025 年網際內容管理課程並不使用 SolidWorks, 但故事還是得從這個與 Windows 95 一同推出的 MCAD 套件說起......&lt;/p&gt;


&lt;h2&gt;The Tale of DesignView and SolidWorks&lt;/h2&gt;
&lt;p&gt;Before the advent of SolidWorks, a revolutionary 3D CAD software, there was a tale of innovation and risk-taking that set the stage for its creation. Jon Hirschtick, a brilliant mind with a knack for both engineering and strategic thinking, was at the heart of this story.&lt;/p&gt;
&lt;p&gt;In the early 1990s, Jon Hirschtick was a key player in the development of a 2D CAD package known as DesignView. This software was designed to aid engineers and designers in creating precise 2D drawings of mechanical components. While DesignView was a valuable tool in its own right, Hirschtick recognized the limitations of 2D design and envisioned a future where 3D modeling would become the standard in the industry.&lt;/p&gt;
&lt;p&gt;However, the journey to realize this vision required more than just technical expertise; it required capital. Hirschtick, leveraging his membership in the legendary MIT Blackjack Team, used his winnings from card counting in Las Vegas to fund his entrepreneurial venture. The MIT Blackjack Team was a group of students and ex-students from the Massachusetts Institute of Technology (MIT) who used card counting techniques and sophisticated strategies to beat casinos at blackjack. Through their efforts, they managed to win substantial amounts of money, and Hirschtick used his share of the winnings to fund the creation of SolidWorks.&lt;/p&gt;
&lt;p&gt;With the financial backing secured, he founded SolidWorks Corporation in December 1993. Hirschtick assembled a team of talented engineers and developers, and together they embarked on the ambitious project of creating SolidWorks. During this time, Hirschtick met Sam Geisberg, a former executive at PTC (Parametric Technology Corporation) and one of the minds behind the creation of Pro/ENGINEER, another groundbreaking CAD software. Geisberg's experience and insights proved invaluable, and he became a key advisor in the development of SolidWorks.&lt;/p&gt;
&lt;p&gt;Their goal was to develop a 3D CAD software that was not only powerful and feature-rich but also affordable and user-friendly. This marked a significant departure from the expensive and complex CAD systems that dominated the market at the time.&lt;/p&gt;
&lt;p&gt;The team's hard work and dedication paid off, and in 1995, the first version of SolidWorks was released. It quickly gained popularity for its intuitive interface, robust capabilities, and competitive pricing. SolidWorks transformed the CAD industry, making 3D design accessible to a broader audience and setting new standards for CAD software.&lt;/p&gt;
&lt;p&gt;The tale of DesignView and SolidWorks is a testament to Jon Hirschtick's visionary thinking, strategic risk-taking, and unwavering commitment to innovation. It highlights how a blend of technical prowess and entrepreneurial spirit, combined with an unconventional funding source like blackjack winnings, and the collaboration with industry veterans like Sam Geisberg, can lead to groundbreaking advancements that shape entire industries.&lt;/p&gt;
&lt;p&gt;翻成繁體中文如下:&lt;/p&gt;
&lt;h2&gt;DesignView 與 SolidWorks 的故事&lt;/h2&gt;
&lt;p&gt;在 SolidWorks 這款革命性的 3D CAD 軟體誕生之前，有一段關於創新和冒險的故事，為它的創造奠定了基礎。喬恩·赫施蒂克 (Jon Hirschtick) 是這個故事的核心人物，他擁有卓越的工程和戰略思維能力。&lt;/p&gt;
&lt;p&gt;在1990年代初期，喬恩·赫施蒂克是 2D CAD 軟體 DesignView 開發中的關鍵人物。這款軟體旨在幫助工程師和設計師創建精確的機械零件 2D 圖紙。儘管 DesignView 是一個有價值的工具，但赫施蒂克認識到 2D 設計的局限性，並設想了 3D 建模將成為行業標準的未來。&lt;/p&gt;
&lt;p&gt;然而，實現這一願景需要的不僅僅是技術專長；還需要資金。赫施蒂克利用他在傳奇的麻省理工學院 (MIT) 21 點小組中的成員身份，將他在拉斯維加斯通過算牌贏得的獎金用於資助他的創業計劃。MIT 21 點小組是一群來自麻省理工學院的學生和前學生，他們利用算牌技術和複雜的策略在賭場中贏得 21 點遊戲。通過他們的努力，他們成功贏得了大量金錢，而赫施蒂克則將他的一部分獎金用於資助 SolidWorks 的創立。&lt;/p&gt;
&lt;p&gt;在獲得了資金支持後，他於1993年12月創立了 SolidWorks 公司。赫施蒂克組建了一支才華橫溢的工程師和開發人員團隊，並共同開展了創建 SolidWorks 的雄心勃勃的項目。在此期間，赫施蒂克遇到了山姆·蓋斯伯格 (Sam Geisberg)，他是 PTC（參數技術公司） 的前高管，也是另一款突破性 CAD 軟體 Pro/ENGINEER 的創造者之一。蓋斯伯格的經驗和見解彌足珍貴，並成為 SolidWorks 開發中的關鍵顧問。&lt;/p&gt;
&lt;p&gt;他們的目標是開發一款既強大又功能豐富，同時價格合理且易於使用的 3D CAD 軟體。這標誌著與當時市場上昂貴且複雜的 CAD 系統的重大改變。&lt;/p&gt;
&lt;p&gt;團隊的辛勤工作和奉獻得到了回報，1995年，第一版 SolidWorks 發布。它迅速因其直觀的界面、強大的功能和具有競爭力的定價而廣受歡迎。SolidWorks 改變了 CAD 行業，使 3D 設計對更廣泛的受眾變得可及，並為 CAD 軟體設立了新的標準。&lt;/p&gt;
&lt;p&gt;DesignView 和 SolidWorks 的故事是喬恩·赫施蒂克富有遠見的思維、戰略風險承擔和對創新的堅定承諾的見證。它彰顯了技術能力和創業精神的結合，結合了如算牌獎金這樣的非傳統資金來源，以及與像山姆·蓋斯伯格這樣的行業資深人士的合作，如何能夠引領開創性的進步，並塑造整個行業。&lt;/p&gt;
&lt;p&gt;是的, 這門課並不採用 Solidworks 進行繪圖, 而是主要採用 Solvespace:&lt;/p&gt;
&lt;h1&gt;The Creation of SolveSpace&lt;/h1&gt;
&lt;p&gt;SolveSpace is a parametric 3D CAD software, and its creation is a story driven by personal passion for engineering and software development. The creator of SolveSpace, Jonathan Westhues, achieved significant progress in making 3D modeling accessible to a broader audience.&lt;/p&gt;
&lt;h2&gt;The Genesis&lt;/h2&gt;
&lt;p&gt;In the mid-2000s, Jonathan Westhues, an engineer with a deep interest in software development and computer-aided design (CAD), began the project that would become SolveSpace. At that time, existing CAD software was either too expensive or overly complex for hobbyists, small businesses, and individual engineers. Jonathan saw a gap in the market and was determined to fill it by creating a CAD tool that was both powerful and user-friendly.&lt;/p&gt;
&lt;p&gt;Jonathan's background played a crucial role in his ability to create such a software package. He earned his undergraduate degree in Electrical Engineering from the University of Waterloo in Canada. He later pursued further studies at the Massachusetts Institute of Technology (MIT), one of the world's leading institutions for engineering and technology. His education provided him with a strong foundation in both hardware and software, as well as a deep understanding of the principles of design and manufacturing. Additionally, his experience in software development and his passion for engineering enabled him to tackle the challenges of creating a new CAD tool from scratch.&lt;/p&gt;
&lt;h2&gt;Development Begins&lt;/h2&gt;
&lt;p&gt;Jonathan Westhues started developing SolveSpace as a labor of love, aiming to create a lightweight yet powerful CAD tool capable of handling both 2D and 3D modeling with ease. He designed SolveSpace to support parametric modeling, allowing users to define relationships between different parts of their designs. This feature was particularly valuable for engineers and designers who needed to make iterative changes to their models without starting from scratch.&lt;/p&gt;
&lt;p&gt;SolveSpace was built with a focus on simplicity and efficiency. Jonathan utilized his extensive knowledge of both engineering and software development to create an intuitive interface that minimized the learning curve for new users. The software was written in C++, a language known for its performance and control, enabling SolveSpace to run smoothly even on less powerful hardware.&lt;/p&gt;
&lt;h2&gt;Open Source and Community Involvement&lt;/h2&gt;
&lt;p&gt;One of the pivotal decisions Jonathan made was to release SolveSpace as open-source software. In 2013, Jonathan open-sourced SolveSpace for several reasons. First, he wanted to attract the global community of developers and engineers to contribute to its development, thereby accelerating its improvement. Second, open-sourcing allowed SolveSpace to be freely used and modified, making it an attractive option for educational institutions, small businesses, and individual hobbyists with limited budgets.&lt;/p&gt;
&lt;p&gt;By open-sourcing SolveSpace, Jonathan invited the global community of developers and engineers to participate in its development. Users could report bugs, suggest features, and even contribute code, making SolveSpace a collaborative effort. This decision not only accelerated the improvement of SolveSpace but also fostered a sense of community around the project.&lt;/p&gt;
&lt;h2&gt;Growth and Recognition&lt;/h2&gt;
&lt;p&gt;Over the years, SolveSpace gained recognition for its capabilities and ease of use. It became a popular choice for DIY enthusiasts, educators, and professionals looking for a cost-effective CAD solution. The software's ability to handle complex models, perform Boolean operations, and export designs in various formats made it a versatile tool for a wide range of applications.&lt;/p&gt;
&lt;p&gt;Jonathan Westhues' commitment to maintaining and improving SolveSpace, along with contributions from the community, ensured that the software continued to evolve. Regular updates and enhancements kept SolveSpace competitive with other CAD tools, while its open-source nature allowed it to adapt to the changing needs of its users.&lt;/p&gt;
&lt;h2&gt;Legacy and Impact&lt;/h2&gt;
&lt;p&gt;The creation of SolveSpace is a testament to the power of individual initiative and community collaboration. Jonathan Westhues' vision of a user-friendly, parametric 3D CAD program has made a significant impact on the world of computer-aided design. By providing a powerful yet accessible tool, SolveSpace has empowered countless individuals and organizations to bring their ideas to life.&lt;/p&gt;
&lt;p&gt;In a world where technology is often driven by large corporations, SolveSpace stands out as an example of how a single person's dedication and a supportive community can create something truly remarkable. Its legacy continues to inspire and enable innovation in the fields of engineering, design, and education.&lt;/p&gt;
&lt;p&gt;翻為繁體中文如下:&lt;/p&gt;
&lt;h1&gt;SolveSpace 的創建&lt;/h1&gt;
&lt;p&gt;SolveSpace 是一款參數化 3D CAD 軟體，其誕生之旅是一個由個人對工程和軟體開發的熱情驅動的創新故事。SolveSpace 的創始人 Jonathan Westhues 在使 3D 建模更易於使用方面取得了顯著進展。&lt;/p&gt;
&lt;h2&gt;起源&lt;/h2&gt;
&lt;p&gt;在 2000 年代中期，Jonathan Westhues 是一位對軟體開發和計算機輔助設計 (CAD) 深感興趣的工程師，他開始了成為 SolveSpace 的項目。在那個時候，現有的 CAD 軟體要麼過於昂貴，要麼對於業餘愛好者、小型企業和個人工程師來說過於複雜。Jonathan 看到市場上有這樣一個空白，決心填補它，創建一款既強大又易於使用的 CAD 工具。&lt;/p&gt;
&lt;p&gt;Jonathan 的背景在他能夠創建這樣一款軟體包中起到了至關重要的作用。他在加拿大滑鐵盧大學獲得了電子工程學士學位，之後又在麻省理工學院 (MIT) 進行了進一步的學習。這些教育經歷為他提供了堅實的硬體和軟體基礎，以及對設計和製造原理的深入理解。此外，他在軟體開發方面的經驗和對工程的熱情，使他能夠克服從零開始創建新 CAD 工具的挑戰。&lt;/p&gt;
&lt;h2&gt;開發開始&lt;/h2&gt;
&lt;p&gt;Jonathan Westhues 開始開發 SolveSpace，這是一個出於熱愛的項目，旨在創建一個輕量級但功能強大的 CAD 工具，可以輕鬆處理 2D 和 3D 建模。他設計了 SolveSpace 支持參數化建模，允許用戶定義設計中不同部分之間的關係。這一功能對於需要對模型進行反覆更改而不必從頭開始的工程師和設計師特別有價值。&lt;/p&gt;
&lt;p&gt;SolveSpace 的開發重點是簡單和高效。Jonathan 利用了他在工程和軟體開發方面的廣泛知識，創建了一個直觀的界面，將新用戶的學習曲線降至最低。該軟體是用 C++ 編寫的，這是一種以性能和控制著稱的語言，使 SolveSpace 即使在性能較低的硬體上也能順暢運行。&lt;/p&gt;
&lt;h2&gt;開源和社群參與&lt;/h2&gt;
&lt;p&gt;Jonathan 做出的關鍵決定之一是將 SolveSpace 作為開源軟體發布。2013 年，Jonathan 將 SolveSpace 開源，這一決定背後有多種原因。首先，他希望能吸引全球的開發者和工程師社群來參與其開發，這樣可以加速 SolveSpace 的改進。其次，開源讓 SolveSpace 可以自由使用和修改，這對於預算有限的教育機構、小型企業和個人愛好者來說是一個有吸引力的選擇。&lt;/p&gt;
&lt;p&gt;通過開源，Jonathan 邀請了全球的開發者和工程師社群來參與其開發。用戶可以報告錯誤、提出功能建議，甚至貢獻代碼，使 SolveSpace 成為一個合作的努力。這不僅加速了 SolveSpace 的改進，還培養了圍繞該項目的社群感。&lt;/p&gt;
&lt;h2&gt;成長與認可&lt;/h2&gt;
&lt;p&gt;多年來，SolveSpace 因其功能和易用性而獲得了認可。它成為 DIY 愛好者、教育工作者和尋求具有成本效益的 CAD 解決方案的專業人士的熱門選擇。該軟體能夠處理複雜的模型、執行布爾運算以及以各種格式導出設計，使其成為廣泛應用的多功能工具。&lt;/p&gt;
&lt;p&gt;Jonathan Westhues 對維護和改進 SolveSpace 的承諾，加上社群的貢獻，確保了該軟體的不斷發展。定期的更新和增強功能使 SolveSpace 在 CAD 工具中保持競爭力，而其開源性質也使其能夠適應用戶的不斷變化的需求。&lt;/p&gt;
&lt;h2&gt;遺產與影響&lt;/h2&gt;
&lt;p&gt;SolveSpace 的創建是個人努力和社群合作力量的見證。Jonathan Westhues 對用戶友好、參數化 3D CAD 程式的願景對計算機輔助設計的世界產生了重大影響。通過提供一個強大且易於使用的工具，SolveSpace 賦予了無數個人和組織將他們的想法變為現實的能力。&lt;/p&gt;
&lt;p&gt;在一個由大型企業主導的技術世界中，SolveSpace 突出了單個人的奉獻和支持性社群如何能夠創造出真正了不起的事物。其遺產繼續在工程、設計和教育領域激發並推動創新。&lt;/p&gt;
&lt;p&gt;除了 Solvespace, 協同產品設計也採用 Onshape:&lt;/p&gt;
&lt;h1&gt;The Creation of Onshape&lt;/h1&gt;
&lt;p&gt;Onshape is a revolutionary cloud-based CAD software that has transformed the way engineers and designers collaborate on their projects. The creation of Onshape is a story of vision, innovation, and the persistent pursuit of a better design tool for the modern era. The founders of Onshape, including Jon Hirschtick, John McEleney, and other former members of the SolidWorks team, leveraged their extensive experience in the CAD industry to create a truly groundbreaking product.&lt;/p&gt;
&lt;h2&gt;The Genesis&lt;/h2&gt;
&lt;p&gt;The journey of Onshape began in 2012 when Jon Hirschtick, a key figure behind the success of SolidWorks, recognized the limitations of traditional CAD software. Despite the significant advancements in CAD technology, existing tools were still tethered to desktop computers and lacked the collaborative capabilities required in an increasingly connected world. Hirschtick and his team envisioned a cloud-based CAD solution that would eliminate these constraints and enable real-time collaboration, accessibility, and seamless integration.&lt;/p&gt;
&lt;h2&gt;Founders and Background&lt;/h2&gt;
&lt;p&gt;Jon Hirschtick, who had previously founded SolidWorks, brought together a team of industry veterans with a shared vision. John McEleney, another co-founder, had served as CEO of SolidWorks and had a deep understanding of the CAD market and its evolving needs. The team also included other former SolidWorks engineers and executives, all of whom had extensive experience in developing and marketing CAD software.&lt;/p&gt;
&lt;p&gt;The founders' backgrounds were instrumental in the creation of Onshape. Their combined expertise in engineering, software development, and business strategy provided a solid foundation for tackling the challenges of developing a cloud-based CAD platform. Their prior success with SolidWorks gave them valuable insights into the needs and pain points of CAD users, which they aimed to address with Onshape.&lt;/p&gt;
&lt;h2&gt;Development Begins&lt;/h2&gt;
&lt;p&gt;Development of Onshape began in earnest in 2012. The team set out to create a CAD system that would run entirely in the cloud, allowing users to access their designs from any device with an internet connection. This approach required overcoming significant technical challenges, including ensuring robust performance, data security, and real-time collaboration capabilities.&lt;/p&gt;
&lt;p&gt;Onshape was built using modern web technologies and cloud infrastructure. The team leveraged their deep knowledge of CAD software to design an intuitive and powerful interface that would meet the needs of professional engineers and designers. They also prioritized features such as version control, concurrent editing, and seamless integration with other cloud-based tools, all of which were essential for a fully collaborative design environment.&lt;/p&gt;
&lt;h2&gt;Open Source and Community Involvement&lt;/h2&gt;
&lt;p&gt;While Onshape itself is not open-source, the development team has actively engaged with the engineering and design communities to gather feedback and continuously improve the product. Onshape's cloud-based nature allows for rapid updates and iterative development, enabling the team to respond quickly to user needs and incorporate new features based on community input.&lt;/p&gt;
&lt;h2&gt;Growth, Acquisition, and Recognition&lt;/h2&gt;
&lt;p&gt;Since its launch in 2015, Onshape has gained widespread recognition for its innovative approach to CAD. It has become a popular choice for engineering teams, educational institutions, and individual designers looking for a flexible and collaborative design tool. Onshape's ability to facilitate real-time collaboration, streamline workflows, and ensure data security has made it a standout product in the CAD market.&lt;/p&gt;
&lt;p&gt;In 2019, Onshape was acquired by PTC, a global technology company that specializes in digital transformation solutions. The acquisition by PTC has provided Onshape with additional resources and support to further enhance its capabilities and expand its reach in the CAD industry.&lt;/p&gt;
&lt;p&gt;The company's commitment to continuous improvement and user-centric design has helped Onshape maintain its competitive edge. Regular updates and new feature releases have kept the platform at the forefront of CAD technology, while its cloud-based architecture has enabled it to scale and adapt to the evolving needs of its users.&lt;/p&gt;
&lt;h2&gt;Legacy and Impact&lt;/h2&gt;
&lt;p&gt;The creation of Onshape is a testament to the power of vision, innovation, and collaboration. By reimagining CAD for the cloud era, Jon Hirschtick, John McEleney, and their team have made a significant impact on the world of computer-aided design. Onshape has empowered engineers and designers to work more efficiently, collaborate seamlessly, and bring their ideas to life in new and exciting ways.&lt;/p&gt;
&lt;p&gt;In a world where technology is increasingly driven by connectivity and collaboration, Onshape stands out as a pioneering product that has redefined the CAD industry. Its legacy continues to inspire innovation and shape the future of design and engineering.&lt;/p&gt;
&lt;p&gt;翻為繁體中文:&lt;/p&gt;
&lt;h1&gt;Onshape 的創建&lt;/h1&gt;
&lt;p&gt;Onshape 是一款革命性的雲端 CAD 軟體，改變了工程師和設計師協作的方式。Onshape 的創建故事充滿了遠見、創新和對於打造更好的現代設計工具的堅持。Onshape 的創始人，包括 Jon Hirschtick、John McEleney 和其他前 SolidWorks 團隊成員，利用他們在 CAD 行業的豐富經驗，創造出了一款真正突破性的產品。&lt;/p&gt;
&lt;h2&gt;起源&lt;/h2&gt;
&lt;p&gt;Onshape 之旅始於 2012 年，當時 Jon Hirschtick 是 SolidWorks 成功的關鍵人物之一，他認識到傳統 CAD 軟體的局限性。儘管 CAD 技術已有重大進步，現有工具仍然依賴於桌面電腦，且缺乏日益互聯世界所需的協作能力。Hirschtick 和他的團隊設想了一種基於雲端的 CAD 解決方案，能夠消除這些限制，實現實時協作、可訪問性和無縫整合。&lt;/p&gt;
&lt;h2&gt;創始人和背景&lt;/h2&gt;
&lt;p&gt;Jon Hirschtick 曾創立 SolidWorks，他召集了一支擁有共同願景的行業老手團隊。另一位共同創始人 John McEleney 曾任 SolidWorks CEO，對 CAD 市場及其需求變化有深刻理解。團隊中還包括其他前 SolidWorks 工程師和高管，他們在 CAD 軟體的開發和推廣方面擁有豐富經驗。&lt;/p&gt;
&lt;p&gt;創始人的背景對 Onshape 的創建至關重要。他們在工程、軟體開發和商業策略方面的專業知識，為克服開發雲端 CAD 平台的挑戰提供了堅實基礎。他們在 SolidWorks 的成功經驗，使他們能夠深入了解 CAD 用戶的需求和痛點，並在 Onshape 中加以解決。&lt;/p&gt;
&lt;h2&gt;開發開始&lt;/h2&gt;
&lt;p&gt;Onshape 的開發於 2012 年正式啟動。團隊致力於創建一個完全在雲端運行的 CAD 系統，允許用戶從任何有網絡連接的設備訪問他們的設計。這一方法需要克服重大技術挑戰，包括確保穩健的性能、數據安全和實時協作能力。&lt;/p&gt;
&lt;p&gt;Onshape 使用現代網絡技術和雲基礎設施構建。團隊利用他們對 CAD 軟體的深刻理解，設計出一個直觀且功能強大的界面，滿足專業工程師和設計師的需求。他們還優先考慮版本控制、並發編輯和與其他雲端工具的無縫集成等功能，這些對於完全協作的設計環境至關重要。&lt;/p&gt;
&lt;h2&gt;開源和社群參與&lt;/h2&gt;
&lt;p&gt;雖然 Onshape 本身不是開源軟體，但開發團隊積極與工程和設計社群互動，以收集反饋並不斷改進產品。Onshape 的雲端特性允許快速更新和迭代開發，使團隊能夠快速響應用戶需求，並根據社群意見加入新功能。&lt;/p&gt;
&lt;h2&gt;成長、收購與認可&lt;/h2&gt;
&lt;p&gt;自 2015 年推出以來，Onshape 因其創新性的 CAD 方式而廣受認可。它成為工程團隊、教育機構和尋求靈活協作設計工具的個人設計師的熱門選擇。Onshape 能夠促進實時協作、簡化工作流程並確保數據安全，使其成為 CAD 市場中的佼佼者。&lt;/p&gt;
&lt;p&gt;2019 年，Onshape 被全球技術公司 PTC 收購，PTC 專注於數字化轉型解決方案。被 PTC 收購為 Onshape 提供了額外的資源和支持，使其能夠進一步提升功能並擴大在 CAD 行業的影響力。&lt;/p&gt;
&lt;p&gt;公司對持續改進和以用戶為中心設計的承諾，幫助 Onshape 保持競爭優勢。定期更新和新功能發布，使該平台在 CAD 技術前沿保持領先地位，而其雲端架構使其能夠擴展並適應用戶不斷變化的需求。&lt;/p&gt;
&lt;h2&gt;遺產與影響&lt;/h2&gt;
&lt;p&gt;Onshape 的創建是遠見、創新和協作力量的見證。通過為雲時代重新構想 CAD，Jon Hirschtick、John McEleney 和他們的團隊對計算機輔助設計世界產生了重大影響。Onshape 使工程師和設計師能夠更高效地工作、無縫協作，並以新的和令人興奮的方式實現他們的想法。&lt;/p&gt;
&lt;p&gt;在一個技術越來越依賴互聯性和協作的世界中，Onshape 突顯出作為一款開創性產品，重新定義了 CAD 行業。其遺產繼續激發創新，並塑造設計和工程的未來。&lt;/p&gt;
&lt;p&gt;除了 CAD 之外, 協同產品設計還使用了 Webots:&lt;/p&gt;
&lt;h1&gt;The Creation of Webots&lt;/h1&gt;
&lt;p&gt;Webots is an advanced robot simulation software that has become a cornerstone in the field of robotics education and research. The creation of Webots is a story of innovation, academic pursuit, and the relentless drive to bridge the gap between theory and practical application. The founder of Webots, Olivier Michel, along with his team at Cyberbotics Ltd., leveraged their extensive expertise in robotics and computer science to develop a tool that has significantly impacted the robotics community.&lt;/p&gt;
&lt;h2&gt;The Genesis&lt;/h2&gt;
&lt;p&gt;The journey of Webots began in the mid-1990s when Olivier Michel was a Ph.D. student at the École Polytechnique Fédérale de Lausanne (EPFL) in Switzerland. At that time, there was a growing need for a versatile and user-friendly robot simulation software to support research and education in robotics. Existing simulations were often too specialized, limited in functionality, or difficult to use. Olivier Michel recognized this gap and envisioned a platform that would provide a comprehensive and accessible solution for simulating robots.&lt;/p&gt;
&lt;h2&gt;Founders and Background&lt;/h2&gt;
&lt;p&gt;Olivier Michel, the driving force behind Webots, had a strong background in computer science and robotics. He completed his undergraduate studies in computer science at the Université de Technologie de Compiègne (UTC) in France and went on to pursue his Ph.D. at EPFL. His research at EPFL focused on swarm robotics and collective intelligence, areas that required robust simulation tools for experimentation and validation.&lt;/p&gt;
&lt;p&gt;Michel's academic background and research experience were instrumental in the creation of Webots. His deep understanding of robotics principles, coupled with his programming skills, enabled him to design a simulation environment that addressed the needs of both researchers and educators. He was supported by a team of talented engineers and researchers at Cyberbotics Ltd., the company he founded to develop and commercialize Webots.&lt;/p&gt;
&lt;h2&gt;Development Begins&lt;/h2&gt;
&lt;p&gt;The development of Webots began in earnest in 1996 during Michel's Ph.D. studies. The initial goal was to create a flexible and extendable simulation platform that could model various types of robots and their interactions with the environment. The software was designed to support a wide range of robotic systems, from simple wheeled robots to complex humanoid robots.&lt;/p&gt;
&lt;p&gt;Webots was built using the C++ programming language, which provided the performance and control needed for real-time simulation. The software incorporated advanced physics engines to accurately model the dynamics of robots and their environments. Michel and his team focused on creating an intuitive user interface that would allow users to easily design, simulate, and visualize robotic systems.&lt;/p&gt;
&lt;h2&gt;Open Source and Community Involvement&lt;/h2&gt;
&lt;p&gt;In 2018, Cyberbotics Ltd. made a pivotal decision to release Webots as open-source software under the Apache 2.0 license. This decision was driven by the desire to foster a larger community of users and contributors, accelerating the development and adoption of Webots. By open-sourcing Webots, Cyberbotics aimed to provide researchers, educators, and developers with a powerful tool that could be freely used, modified, and distributed.&lt;/p&gt;
&lt;p&gt;The open-source nature of Webots has enabled a global community of users to contribute to its development. Users can report bugs, suggest features, and submit code, making Webots a collaborative project. This community involvement has led to continuous improvements and enhancements, ensuring that Webots remains at the forefront of robot simulation technology.&lt;/p&gt;
&lt;h2&gt;Growth and Recognition&lt;/h2&gt;
&lt;p&gt;Since its initial release, Webots has gained widespread recognition for its capabilities and versatility. It has become a popular choice for robotics researchers, educators, and developers worldwide. Webots' ability to simulate a wide range of robotic systems, perform realistic physics simulations, and integrate with various programming languages and development environments has made it an indispensable tool in the field of robotics.&lt;/p&gt;
&lt;p&gt;Webots has been used in numerous academic research projects, industrial applications, and educational programs. Its impact on robotics education is particularly notable, as it provides students with a hands-on learning experience that bridges the gap between theoretical concepts and practical implementation.&lt;/p&gt;
&lt;h2&gt;Legacy and Impact&lt;/h2&gt;
&lt;p&gt;The creation of Webots is a testament to the power of academic pursuit and community collaboration. Olivier Michel's vision of a comprehensive and accessible robot simulation platform has had a profound impact on the field of robotics. By providing a powerful and user-friendly tool, Webots has empowered researchers, educators, and developers to advance the state of the art in robotics.&lt;/p&gt;
&lt;p&gt;In a world where technology is rapidly evolving, Webots stands out as an example of how innovation and collaboration can drive progress. Its legacy continues to inspire and enable breakthroughs in robotics research, education, and development.&lt;/p&gt;
&lt;p&gt;翻為繁體中文:&lt;/p&gt;
&lt;h1&gt;Webots 的創建&lt;/h1&gt;
&lt;p&gt;Webots 是一款先進的機器人模擬軟體，已成為機器人教育和研究領域的基石。Webots 的創建故事充滿了創新、學術追求以及彌合理論與實踐應用之間鴻溝的執著。Webots 的創始人 Olivier Michel 和他在 Cyberbotics Ltd. 的團隊，利用他們在機器人技術和計算機科學方面的豐富專業知識，開發出了一款對機器人社群影響深遠的工具。&lt;/p&gt;
&lt;h2&gt;起源&lt;/h2&gt;
&lt;p&gt;Webots 的旅程始於 1990 年代中期，當時 Olivier Michel 是瑞士洛桑聯邦理工學院 (EPFL) 的博士生。當時，迫切需要一款多功能且易於使用的機器人模擬軟體來支持機器人研究和教育。現有的模擬工具通常過於專業化、功能有限或難以使用。Olivier Michel 看到了這樣一個空白，並設想了一個可以為模擬機器人提供全面且易於使用的解決方案。&lt;/p&gt;
&lt;h2&gt;創始人和背景&lt;/h2&gt;
&lt;p&gt;Olivier Michel 是 Webots 的推動力，他擁有計算機科學和機器人技術的強大背景。他在法國康平涅技術大學 (UTC) 完成了計算機科學本科學位，之後在 EPFL 攻讀博士學位。他在 EPFL 的研究重點是群體機器人技術和集體智能，這些領域需要穩健的模擬工具來進行實驗和驗證。&lt;/p&gt;
&lt;p&gt;Michel 的學術背景和研究經驗對 Webots 的創建至關重要。他對機器人技術原理的深刻理解，加上他的編程技能，使他能夠設計出一個滿足研究者和教育者需求的模擬環境。他得到了 Cyberbotics Ltd. 團隊中才華橫溢的工程師和研究人員的支持，這家公司是他為開發和商業化 Webots 而創立的。&lt;/p&gt;
&lt;h2&gt;開發開始&lt;/h2&gt;
&lt;p&gt;Webots 的開發於 1996 年在 Michel 的博士研究期間正式開始。最初的目標是創建一個靈活且可擴展的模擬平台，可以模擬各種類型的機器人及其與環境的互動。該軟體旨在支持從簡單的輪式機器人到複雜的人形機器人等各種機器人系統。&lt;/p&gt;
&lt;p&gt;Webots 使用 C++ 編程語言構建，這種語言為實時模擬提供了所需的性能和控制。該軟體融合了先進的物理引擎，以準確模擬機器人及其環境的動態。Michel 和他的團隊專注於創建一個直觀的用戶界面，使用戶能夠輕鬆設計、模擬和可視化機器人系統。&lt;/p&gt;
&lt;h2&gt;開源和社群參與&lt;/h2&gt;
&lt;p&gt;2018 年，Cyberbotics Ltd. 做出了一個關鍵決定，將 Webots 以 Apache 2.0 許可證開源。這一決定旨在培養更大的用戶和貢獻者社群，加速 Webots 的開發和採用。通過開源 Webots，Cyberbotics 希望為研究者、教育者和開發者提供一個強大的工具，這些工具可以自由使用、修改和分發。&lt;/p&gt;
&lt;p&gt;Webots 的開源性質使全球用戶社群能夠參與其開發。用戶可以報告錯誤、提出功能建議，甚至提交代碼，使 Webots 成為一個合作項目。這種社群參與導致了持續的改進和增強，確保 Webots 始終處於機器人模擬技術的前沿。&lt;/p&gt;
&lt;h2&gt;成長與認可&lt;/h2&gt;
&lt;p&gt;自首次發布以來，Webots 因其功能和多樣性而廣受認可。它成為全球機器人研究者、教育者和開發者的熱門選擇。Webots 能夠模擬各種類型的機器人系統，進行現實的物理模擬，並與各種編程語言和開發環境集成，這使其成為機器人領域不可或缺的工具。&lt;/p&gt;
&lt;p&gt;Webots 被用於許多學術研究項目、工業應用和教育計劃。它對機器人教育的影響尤其顯著，因為它為學生提供了一個動手學習的經驗，彌合了理論概念和實際應用之間的鴻溝。&lt;/p&gt;
&lt;h2&gt;遺產與影響&lt;/h2&gt;
&lt;p&gt;Webots 的創建是學術追求和社群合作力量的見證。Olivier Michel 對全面且易於使用的機器人模擬平台的願景對機器人領域產生了深遠的影響。通過提供一個強大且用戶友好的工具，Webots 賦予了研究者、教育者和開發者推進機器人技術前沿的能力。&lt;/p&gt;
&lt;p&gt;在這個技術快速發展的世界中，Webots 突顯出創新和合作如何推動進步。其遺產繼續激發並推動機器人研究、教育和開發領域的突破。&lt;/p&gt;</content><category term="wcm2025"></category><category term="w1"></category><category term="wcm2025"></category></entry></feed>